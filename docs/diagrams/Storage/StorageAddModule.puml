@startuml
'https://plantuml.com/sequence-diagram
activate ":Duke"
":Duke" -> ":AddModuleCommand" : command.execute()
activate ":AddModuleCommand"
":AddModuleCommand" -> ":Storage" : addModuleToModuleList(moduleToAdd)
activate ":Storage"
opt moduleToAdd == null
":Storage" -> "<<class>>\n:UI" : UI.printAddModuleFailureMessage()
activate "<<class>>\n:UI"
":Storage" <-- "<<class>>\n:UI"
deactivate "<<class>>\n:UI"
":AddModuleCommand"<-- ":Storage" : false
end

opt doesModuleExist(moduleToAdd)
":Storage" -> "<<class>>\n:UI" : UI.printModAlreadyExistMessage()
activate "<<class>>\n:UI"
":Storage" <-- "<<class>>\n:UI"
deactivate "<<class>>\n:UI"
":AddModuleCommand"<-- ":Storage" : false
end

":Storage" -> ":ArrayList<Module>" : modules.add(moduleToAdd)
activate ":ArrayList<Module>"
":Storage" <-- ":ArrayList<Module>"
deactivate ":ArrayList<Module>"

":Storage" -> ":Storage": sortModulesAccordingToPrintingLength(modules)
activate ":Storage"
":Storage" --> ":Storage":
deactivate ":Storage"

":Storage" -> ":Module" : moduleToAdd.toString()
activate ":Module"
":Storage" <-- ":Module" : tempString:String
deactivate ":Module"

alt no exception
":Storage" -> ":Storage" : saveModuleToStorage(tempString)
activate ":Storage"
create ":FileWriter"
":Storage" -> ":FileWriter" : FileWriter(SAVED_MODULES_FILE_PATH, true)
activate ":FileWriter"
":Storage" <-- ":FileWriter"
deactivate ":FileWriter"
":Storage" -> ":Storage" : writeTaskPreparation(saveModuleString)
activate ":Storage"
":Storage" --> ":Storage" : tempString:String
deactivate ":Storage"
":Storage" -> ":FileWriter" : fw.write(tempString)
activate ":FileWriter"
":Storage" <-- ":FileWriter"
deactivate ":FileWriter"
":Storage" -> ":FileWriter" : fw.close()
activate ":FileWriter"
":Storage" <-- ":FileWriter"
deactivate ":FileWriter"
":Storage" --> ":Storage"
deactivate ":Storage"
else exception
":Storage" -> "<<class>>\n:UI" :  UI.printAddModuleFailureMessage()
activate "<<class>>\n:UI"
":Storage" <-- "<<class>>\n:UI"
deactivate "<<class>>\n:UI"
end
":AddModuleCommand" <-- ":Storage" : true
deactivate ":Storage"
opt isAddSuccessful == false
":AddModuleCommand" --> ":Duke"
end
":AddModuleCommand" -> "<<class>>\n:UI" : UI.printAddModMessage()
activate "<<class>>\n:UI"
":AddModuleCommand" <-- "<<class>>\n:UI"
deactivate "<<class>>\n:UI"
":Duke" <-- ":AddModuleCommand"
deactivate ":AddModuleCommand"


@enduml