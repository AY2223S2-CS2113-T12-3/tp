@startuml
'https://plantuml.com/class-diagram

interface DatabaseInterface {
initialiseDatabase():void
writeTaskPreparation(String saveString):String
checkDatabaseCorrupted():boolean
}

class Storage implements DatabaseInterface {
initialiseDatabase():void
writeTaskPreparation(String saveString):String
checkDatabaseCorrupted():boolean
- {static}instance: Storage
- {static}SAVED_MODULES_FILE_PATH: String
+ getInstance(): Storage
- Storage()
+ initialiseDatabase(): void
+ checkDatabaseCorrupted(): boolean
- checkIsValidModule(moduleToCheck: Module, allModules: ArrayList<Module>): boolean
- readModData(modulesFilePath: String, modules: ArrayList<Module>): void
+ addModuleToModuleList(moduleToAdd: Module): boolean
+ doesModuleExist(moduleToAdd: Module): boolean
- saveModuleToStorage(saveModuleString: String): void
+ {static}deleteModule(indexToDeletePuSpecificList: int, modules: ArrayList<Module>, database: Storage, uniID: int): boolean
+ writeModListToFile(modules: ArrayList<Module>): void
+ getModules(): ArrayList<Module>
+ {static}sortModulesAccordingToPrintingLength(modules: ArrayList<Module>): void
}

Storage "modules: ArrayList<Module>"--> "*"Module

class Module {
-univId: int
-moduleCode: String
-moduleName: String
-moduleMCs: int
-nusModuleCode: String
-nusModuleName: String
-nusModuleMCs: int
+Module(univId: int, moduleCode: String, moduleName: String, moduleMCs: int, nusModuleCode: String,
nusModuleName: String, nusModuleMCs: int)
+toString(): String
+getUnivId(): int
+getModuleMCs(): int
+getNusModuleMCs(): int
+getModuleCode(): String
+getModuleName(): String
+getNusModuleCode(): String
+getNusModuleName(): String
+isInFilter(filter: String): boolean
{static}+getPrintingLength(module: Module): int
}


@enduml